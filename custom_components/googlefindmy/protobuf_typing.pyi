# custom_components/googlefindmy/protobuf_typing.pyi
from __future__ import annotations

from typing import Any, Generic, Iterable, Iterator, Mapping, Protocol, Self, TypeVar

_EnumT = TypeVar("_EnumT", bound=int)


class EnumTypeWrapperMeta(type, Generic[_EnumT]):
    """Typed metaclass contract for google.protobuf Enum wrappers."""

    def __call__(cls, value: int, *args: Any, **kwargs: Any) -> _EnumT: ...

    def Name(cls, number: int) -> str: ...

    def Value(cls, name: str) -> _EnumT: ...

    def keys(cls) -> Iterable[str]: ...

    def values(cls) -> Iterable[_EnumT]: ...

    def items(cls) -> Iterable[tuple[str, _EnumT]]: ...

    def __iter__(cls) -> Iterator[_EnumT]: ...

    def __getattr__(cls, name: str) -> _EnumT: ...


class MessageProto(Protocol):
    """Structural interface for google.protobuf.message.Message."""

    def CopyFrom(self, other: Self) -> None: ...

    def MergeFrom(self, other: Self) -> None: ...

    def SerializeToString(self, **kwargs: Any) -> bytes: ...

    def ParseFromString(self, data: bytes) -> None: ...

    def HasField(self, field_name: Any) -> bool: ...

    def ClearField(self, field_name: Any) -> None: ...

    def __deepcopy__(self, memo: Mapping[int, object]) -> Self: ...

    def __eq__(self, other: object) -> bool: ...

    def __hash__(self) -> int: ...

    def __len__(self) -> int: ...
