name: pip-audit

on:
  push:
  pull_request:
  schedule:
    - cron: '17 1 * * *'
    - cron: '17 13 * * *'
  workflow_dispatch:

jobs:
  pip-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pip-audit tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-audit poetry pipenv pipfile-requirements

      - name: Run pip-audit
        run: |
          set -euo pipefail
          cat <<'SARIF' > pip-audit.sarif
          {
            "version": "2.1.0",
            "runs": []
          }
          SARIF

          if [ -f pyproject.toml ]; then
            pip-audit -r pyproject.toml --format sarif -o pip-audit.sarif || true
          elif [ -f poetry.lock ]; then
            requirements_file="pip-audit-requirements.txt"
            poetry export --with dev --format requirements.txt --output "${requirements_file}" \
              || poetry export --format requirements.txt --output "${requirements_file}"
            pip-audit -r "${requirements_file}" --format sarif -o pip-audit.sarif || true
          elif [ -f Pipfile ]; then
            requirements_file="pip-audit-requirements.txt"
            if ! pipenv requirements > "${requirements_file}"; then
              pipfile-requirements Pipfile > "${requirements_file}"
            fi
            pip-audit -r "${requirements_file}" --format sarif -o pip-audit.sarif || true
          elif [ -f requirements.txt ]; then
            pip-audit -r requirements.txt --format sarif -o pip-audit.sarif || true
          else
            echo 'No supported dependency manifests were found; using empty SARIF output.'
          fi

      - name: Upload pip-audit results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit.sarif
          category: pip-audit
