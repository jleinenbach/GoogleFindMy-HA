name: pip-audit

on:
  pull_request:
  workflow_dispatch:
  schedule:
    # Weekly, Tue 03:23 UTC (~Europe/Berlin early morning)
    - cron: '23 3 * * 2'

concurrency:
  group: pip-audit-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

env:
  REQ_FILES: "requirements-dev.txt custom_components/googlefindmy/requirements.txt"

jobs:
  # 1) On PRs: report-only (green) + warnings; no code changes.
  audit-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: pip-audit (report-only; keep CI green)
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          inputs: ${{ env.REQ_FILES }}
          summary: true
          internal-be-careful-allow-failure: true  # action-defined "allow-failure"

      - name: Emit warnings for unfixable vulnerabilities
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip >/dev/null
          python -m pip install pip-audit jq >/dev/null
          for f in $REQ_FILES; do
            [ -f "$f" ] || continue
            # Dry-run JSON to see which vulns are fixable vs. unfixable
            pip-audit -r "$f" --dry-run -f json -o audit.json || true
            fixable=$(jq '[.dependencies[].vulns[] | select((.fix_versions|length)>0)] | length' audit.json)
            unfixable=$(jq '[.dependencies[].vulns[] | select((.fix_versions|length)==0)] | length' audit.json)
            if [ "$unfixable" -gt 0 ]; then
              echo "::warning title=pip-audit (no fix available)::$f: ${unfixable} vulnerability/vulnerabilities without a fix."
            fi
            if [ "$fixable" -gt 0 ]; then
              echo "::notice title=pip-audit (fix available)::$f: ${fixable} vulnerability/vulnerabilities have fixes. They will be auto-fixed by the scheduled job."
            fi
          done

  # 2) On schedule or manual runs: autofix and open a PR with the changes.
  autofix:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # use GITHUB_TOKEN via the PR action

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-audit jq

      - name: Audit and fix (where possible)
        id: fixrun
        run: |
          set -euo pipefail
          changed=0
          echo "### pip-audit auto-fix report" > "$GITHUB_STEP_SUMMARY"
          for f in $REQ_FILES; do
            [ -f "$f" ] || continue
            # Preview what can be fixed
            pip-audit -r "$f" --dry-run -f json -o audit.json || true
            fixable=$(jq '[.dependencies[].vulns[] | select((.fix_versions|length)>0)] | length' audit.json)
            unfixable=$(jq '[.dependencies[].vulns[] | select((.fix_versions|length)==0)] | length' audit.json)

            if [ "$fixable" -gt 0 ]; then
              echo "Fixing $f (${fixable} fixable vulns)..."
              pip-audit -r "$f" --fix || true
              if ! git diff --quiet -- "$f"; then
                changed=1
              fi
            fi

            {
              echo "- ${f}: fixable=${fixable}, unfixable=${unfixable}"
            } >> "$GITHUB_STEP_SUMMARY"
          done
          echo "changed=$changed" >> "$GITHUB_OUTPUT"

      - name: Create pull request with fixes
        if: steps.fixrun.outputs.changed == '1'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: security/pip-audit-autofix
          delete-branch: true
          commit-message: "pip-audit: apply available security updates"
          title: "pip-audit: automatic security updates"
          body: |
            This PR was created automatically by `pip-audit --fix`. It upgrades vulnerable dependencies where fixes exist. Vulnerabilities with no available fix remain and are reported in the job summary.
          labels: security, dependencies, automated-pr
